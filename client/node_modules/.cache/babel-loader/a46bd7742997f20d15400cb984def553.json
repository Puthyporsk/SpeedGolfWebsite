{"ast":null,"code":"import _regeneratorRuntime from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import ConfirmDeleteAccount from'./ConfirmDeleteAccount.js';import{async}from'regenerator-runtime';var CreateEditAccountDialog=/*#__PURE__*/function(_React$Component){_inherits(CreateEditAccountDialog,_React$Component);function CreateEditAccountDialog(props){var _this;_classCallCheck(this,CreateEditAccountDialog);_this=_possibleConstructorReturn(this,_getPrototypeOf(CreateEditAccountDialog).call(this,props));_this.checkDataValidity=function(){if(_this.state.password!=_this.state.passwordRepeat){//Passwords don't match\n_this.repeatPassRef.current.setCustomValidity(\"This password must match password entered in previous field.\");}else{_this.repeatPassRef.current.setCustomValidity(\"\");}};_this.handleChange=function(event){var formUpdated=_this.origAccountInfo==null?true:_this.formIsUpdated(event.target.name,event.target.value);if(event.target.name===\"profilePic\"){if(event.target.value.length==0){//The user canceled the file selection -- set back to default\n_this.setState({profilePicURL:\"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",formUpdated:formUpdated},_this.checkDataValidity);}else{//The user selected a file\nvar self=_assertThisInitialized(_this);var reader=new FileReader();reader.readAsDataURL(_this.profilePicRef.current.files[0]);reader.addEventListener(\"load\",function(){self.setState({profilePicURL:this.result,formUpdated:formUpdated},this.checkDataValidity);});}}else{var _this$setState;_this.setState((_this$setState={},_defineProperty(_this$setState,event.target.name,event.target.value),_defineProperty(_this$setState,\"formUpdated\",formUpdated),_this$setState),_this.checkDataValidity);}};_this.formIsUpdated=function(updateField,updateVal){if(_this.origAccountInfo[updateField]!=updateVal){return true;}if(updateField!=\"type\"&&_this.state.type!=_this.origAccountInfo.type){return true;}if(updateField!=\"displayName\"&&_this.state.displayName!=_this.origAccountInfo.displayName){return true;}if(updateField!=\"profilePicURL\"&&_this.state.profilePicURL!=_this.origAccountInfo.profilePicURL){return true;}if(updateField!=\"password\"&&_this.state.password!==_this.origAccountInfo.password){return true;}if(updateField!=\"passwordRepeat\"&&_this.state.passwordRepeat!==_this.origAccountInfo.passwordRepeat){return true;}if(updateField!=\"securityQuestion\"&&_this.state.securityQuestion!==_this.origAccountInfo.securityQuestion){return true;}if(updateField!=\"securityAnswer\"&&_this.state.securityAnswer!==_this.origAccountInfo.securityAnswer){return true;}return false;};_this.setDefaultDisplayName=function(event){if(event.target.value.length>0&&_this.state.displayName===\"\"){_this.setState({displayName:event.target.value});}};_this.handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var userData,url,res,resText,_resText;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();//Initialize user account\nuserData={type:_this.state.type,displayName:_this.state.displayName,password:_this.state.password,profilePicURL:_this.state.profilePicURL,securityQuestion:_this.state.securityQuestion,securityAnswer:_this.state.securityAnswer};url='/users/'+_this.state.accountName;if(!_this.props.create){_context.next=17;break;}_context.next=6;return fetch(url,{headers:{'Accept':'application/json','Content-Type':'application/json'},method:'POST',body:JSON.stringify(userData)});case 6:res=_context.sent;if(!(res.status==200)){_context.next=11;break;}//successful account creation!\n_this.props.done(\"New account created! Enter credentials to log in.\",false);_context.next=15;break;case 11:_context.next=13;return res.text();case 13:resText=_context.sent;_this.props.done(resText,false);case 15:_context.next=28;break;case 17:_context.next=19;return fetch(url,{headers:{'Accept':'application/json','Content-Type':'application/json'},method:'PUT',body:JSON.stringify(userData)});case 19:res=_context.sent;if(!(res.status==200)){_context.next=24;break;}//successful account creation!\n_this.props.done(\"User Account Updated!\",false);_context.next=28;break;case 24:_context.next=26;return res.text();case 26:_resText=_context.sent;_this.props.done(_resText,false);case 28:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.deleteAccount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var url,res,resText;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url='/users/'+_this.state.accountName;_context2.next=3;return fetch(url,{method:'DELETE'});case 3:res=_context2.sent;if(!(res.status==200)){_context2.next=8;break;}//successful account deletion!\n_this.props.done(\"Account '\"+_this.state.accountName+\"' has been deleted.\",true);_context2.next=12;break;case 8:_context2.next=10;return res.text();case 10:resText=_context2.sent;_this.props.done(resText,false);case 12:_this.setState({confirmDelete:false});case 13:case\"end\":return _context2.stop();}}},_callee2);}));_this.confirmDeleteAccount=function(e){e.preventDefault();_this.setState({confirmDelete:true});};_this.origAccountInfo=null;//Create a ref for the email input DOM element\n_this.newUserRef=React.createRef();_this.repeatPassRef=React.createRef();_this.profilePicRef=React.createRef();_this.state={type:\"user\",accountName:\"\",displayName:\"\",profilePicURL:\"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",password:\"\",passwordRepeat:\"\",securityQuestion:\"\",securityAnswer:\"\",formUpdated:false,confirmDelete:false};return _this;}//componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\n//the database and push them into the state.\n_createClass(CreateEditAccountDialog,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var url,res,json,userData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(this.props.create){_context3.next=12;break;}//obtain current user data from database and push into state\nurl=\"/users/\"+this.props.userId;_context3.next=4;return fetch(url);case 4:res=_context3.sent;_context3.next=7;return res.json();case 7:json=_context3.sent;userData=JSON.parse(json);this.origAccountInfo=userData;//This determines whether update can occur\nthis.origAccountInfo.passwordRepeat=userData.password;this.setState({type:this.props.type,accountName:this.props.userId,displayName:userData.displayName,profilePicURL:userData.profilePicURL,password:userData.password,passwordRepeat:userData.password,securityQuestion:userData.securityQuestion,securityAnswer:userData.securityAnswer});case 12:case\"end\":return _context3.stop();}}},_callee3,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()//checkDataValidity -- Callback function invoked after a form element in\n//the 'Create Account' dialog box changes and component state has been\n//updated. We first check whether the passwords match. If they do not, \n//we set a custom validity message to be displayed when the user clicks the\n//'Create Account' button. Otherwise, we reset the custom validity message\n//to empty so that it will NOT fire when the user clicks 'Create Account'.\n//Second, we check whether anything in the form changed from the original.\n//If so, we update the 'formUpdated' state var, so that the form's submit\n//button is enabled.\n},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"modal\",role:\"dialog\"},React.createElement(\"div\",{className:\"modal-dialog modal-lg\"}),React.createElement(\"div\",{className:\"modal-content form-center\"},React.createElement(\"div\",{className:\"modal-header\"},React.createElement(\"h3\",null,React.createElement(\"b\",null,this.props.create?\"Create New Account\":\"Edit Account\")),React.createElement(\"button\",{className:\"modal-close\",onClick:this.props.cancel},\"\\xD7\")),React.createElement(\"div\",{className:\"modal-body\"},React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"label\",null,\"Type:\",React.createElement(\"select\",{name:\"type\",value:this.state.type,className:\"form-control form-center\",onChange:this.handleChange},React.createElement(\"option\",{value:\"user\"},\"User\"),React.createElement(\"option\",{value:\"operator\"},\"Operator\"))),React.createElement(\"br\",null),React.createElement(\"label\",null,\"Email:\",React.createElement(\"input\",{autocomplete:\"off\",disabled:!this.props.create,className:\"form-control form-text form-center\",name:\"accountName\",type:\"email\",size:\"35\",placeholder:\"Enter Email Address\",pattern:\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}\",required:true,ref:this.newUserRef,value:this.state.accountName,onChange:this.handleChange,onBlur:this.setDefaultDisplayName})),React.createElement(\"br\",null),React.createElement(\"label\",null,\"Password:\",React.createElement(\"input\",{autocomplete:\"off\",className:\"form-control form-text form-center\",name:\"password\",type:\"password\",size:\"35\",placeholder:\"Enter Password\",pattern:\"(?=^.{8,}$)((?=.*\\\\d)|(?=.*\\\\W+))(?![.\\\\n])(?=.*[A-Z])(?=.*[a-z]).*$\",required:true,value:this.state.password,onChange:this.handleChange})),React.createElement(\"br\",null),React.createElement(\"label\",null,\"Repeat Password:\",React.createElement(\"input\",{className:\"form-control form-text form-center\",name:\"passwordRepeat\",type:\"password\",size:\"35\",placeholder:\"Repeat Password\",required:true,ref:this.repeatPassRef,value:this.state.passwordRepeat,onChange:this.handleChange})),React.createElement(\"br\",null),React.createElement(\"label\",null,\"Display Name:\",React.createElement(\"input\",{className:\"form-control form-text form-center\",name:\"displayName\",type:\"text\",size:\"30\",placeholder:\"Display Name\",required:true,value:this.state.displayName,onChange:this.handleChange})),React.createElement(\"br\",null),React.createElement(\"label\",null,\"Profile Picture:\",React.createElement(\"br\",null),React.createElement(\"input\",{className:\"form-control form-text form-center\",name:\"profilePic\",type:\"file\",accept:\"image/x-png,image/gif,image/jpeg\",ref:this.profilePicRef,value:this.state.profilePic,onChange:this.handleChange}),React.createElement(\"img\",{src:this.state.profilePicURL!=\"\"?this.state.profilePicURL:this.state.profilePicDataURL,height:\"60\",width:\"60\"})),React.createElement(\"br\",null),React.createElement(\"label\",null,\"Security Question:\",React.createElement(\"textarea\",{className:\"form-control form-text form-center\",name:\"securityQuestion\",size:\"35\",placeholder:\"Security Question\",rows:\"2\",cols:\"35\",maxLength:\"100\",required:true,value:this.state.securityQuestion,onChange:this.handleChange})),React.createElement(\"br\",null),React.createElement(\"label\",null,\"Answer to Security Question:\",React.createElement(\"textarea\",{className:\"form-control form-text form-center\",name:\"securityAnswer\",type:\"text\",placeholder:\"Answer\",rows:\"2\",cols:\"35\",maxLength:\"100\",required:true,value:this.state.securityAnswer,onChange:this.handleChange})),React.createElement(\"br\",null),!this.props.create?React.createElement(\"button\",{className:\"btn btn-small btn-danger\",onClick:this.confirmDeleteAccount},\"Delete Account...\"):null,React.createElement(\"br\",null),React.createElement(\"br\",null),!this.props.create?React.createElement(\"button\",{type:\"button\",className:\"btn btn-small btn-primary\",onClick:this.toggleAddCardClicked,disabled:this.state.card===1?true:false},\"Add Card\"):null,React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"button\",{role:\"submit\",disabled:!this.state.formUpdated,className:\"btn btn-primary btn-color-theme modal-submit-btn\"},React.createElement(\"span\",{className:this.props.create?\"fa fa-user-plus\":\"fa fa-user\"}),\"\\xA0\",this.props.create?\"Create Account\":\"Update Account\")))),this.state.confirmDelete?React.createElement(ConfirmDeleteAccount,{email:this.state.accountName,deleteAccount:this.deleteAccount,close:function close(){return _this2.setState({confirmDelete:false});}}):null);}}]);return CreateEditAccountDialog;}(React.Component);export default CreateEditAccountDialog;","map":{"version":3,"sources":["/Users/puthypor/Desktop/ssplay/bp-ssplay/client/src/components/CreateEditAccountDialog.js"],"names":["React","ConfirmDeleteAccount","async","CreateEditAccountDialog","props","checkDataValidity","state","password","passwordRepeat","repeatPassRef","current","setCustomValidity","handleChange","event","formUpdated","origAccountInfo","formIsUpdated","target","name","value","length","setState","profilePicURL","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","updateField","updateVal","type","displayName","securityQuestion","securityAnswer","setDefaultDisplayName","handleSubmit","preventDefault","userData","url","accountName","create","fetch","headers","method","body","JSON","stringify","res","status","done","text","resText","deleteAccount","confirmDelete","confirmDeleteAccount","e","newUserRef","createRef","userId","json","parse","cancel","profilePic","profilePicDataURL","toggleAddCardClicked","card","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ConfirmDeleteAccount from './ConfirmDeleteAccount.js';\nimport { async } from 'regenerator-runtime';\n\nclass CreateEditAccountDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.origAccountInfo = null;\n        //Create a ref for the email input DOM element\n        this.newUserRef = React.createRef();\n        this.repeatPassRef = React.createRef();\n        this.profilePicRef = React.createRef();\n        this.state = {\n                    type: \"user\",\n                    accountName: \"\",\n                    displayName: \"\",\n                    profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\n                    password: \"\",\n                    passwordRepeat: \"\",\n                    securityQuestion: \"\",\n                    securityAnswer: \"\",\n                    formUpdated: false,\n                    confirmDelete: false};\n    } \n\n    //componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\n    //the database and push them into the state.\n    async componentDidMount() {\n        if (!this.props.create) {\n            //obtain current user data from database and push into state\n            const url = \"/users/\" + this.props.userId;\n            const res = await fetch(url);\n            const json = await res.json();\n            const userData = JSON.parse(json);\n            this.origAccountInfo = userData; //This determines whether update can occur\n            this.origAccountInfo.passwordRepeat = userData.password;\n            this.setState({\n                        type: this.props.type,\n                        accountName: this.props.userId,\n                        displayName: userData.displayName,\n                        profilePicURL: userData.profilePicURL,\n                        password: userData.password,\n                        passwordRepeat: userData.password,\n                        securityQuestion: userData.securityQuestion,\n                        securityAnswer: userData.securityAnswer});\n        }\n    }\n\n    //checkDataValidity -- Callback function invoked after a form element in\n    //the 'Create Account' dialog box changes and component state has been\n    //updated. We first check whether the passwords match. If they do not, \n    //we set a custom validity message to be displayed when the user clicks the\n    //'Create Account' button. Otherwise, we reset the custom validity message\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\n    //Second, we check whether anything in the form changed from the original.\n    //If so, we update the 'formUpdated' state var, so that the form's submit\n    //button is enabled.\n    checkDataValidity = () => {\n        if (this.state.password != this.state.passwordRepeat) {\n            //Passwords don't match\n            this.repeatPassRef.current.setCustomValidity(\n            \"This password must match password entered in previous field.\");\n        } else {\n            this.repeatPassRef.current.setCustomValidity(\"\");\n        }\n    }\n\n    //handleChange--Called when a field in a dialog box form changes.\n    handleChange = (event) => {\n        const formUpdated = (this.origAccountInfo == null ? true : this.formIsUpdated(event.target.name,event.target.value));\n        if (event.target.name === \"profilePic\") {\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\n                               formUpdated: formUpdated},\n                               this.checkDataValidity);\n            } else { //The user selected a file\n                const self = this;\n                const reader = new FileReader();\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\n                reader.addEventListener(\"load\",function() {\n                    self.setState({profilePicURL:  this.result,\n                                   formUpdated: formUpdated},this.checkDataValidity);\n                });\n                \n            }\n        } else {\n            this.setState({[event.target.name]: event.target.value,\n                           formUpdated: formUpdated},this.checkDataValidity);\n        }\n    } \n\n    //formisUpdated-- Checks whether any form data element has changed from the original. If so, \n    //returns true. Returns false otherwise. Note that in case of editing new account, always returns\n    //true since this.origAccountInfo is set to null.\n    //Should be called whenever the user makes a change to form data.\n    formIsUpdated = (updateField,updateVal) => {\n        if (this.origAccountInfo[updateField] != updateVal) {return true;}\n        if (updateField != \"type\" && \n             this.state.type != this.origAccountInfo.type) \n             {return true;}\n        if (updateField != \"displayName\" && \n             this.state.displayName != this.origAccountInfo.displayName) \n             {return true;}\n        if (updateField != \"profilePicURL\" && \n             this.state.profilePicURL != this.origAccountInfo.profilePicURL) \n             {return true;}\n        if (updateField != \"password\" &&\n            this.state.password !== this.origAccountInfo.password)\n            {return true;}\n        if (updateField != \"passwordRepeat\" &&\n            this.state.passwordRepeat !== this.origAccountInfo.passwordRepeat)\n            {return true;}\n        if (updateField != \"securityQuestion\" &&\n            this.state.securityQuestion !== this.origAccountInfo.securityQuestion)\n            {return true;}\n        if (updateField != \"securityAnswer\" &&\n            this.state.securityAnswer !== this.origAccountInfo.securityAnswer)\n            {return true;}\n        return false;\n    }\n\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\n    //Sets default value of display name to value entered into Email field \n    //as a courtesy.\n    setDefaultDisplayName = (event) => {\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\n        this.setState({displayName: event.target.value});\n      }\n    }\n\n    //handleSubmit -- Triggered when user clicks on submit button to\n    //either create or edit account.\n    //Custom data checking ensures user account under this email does not \n    //already exist and that the rest of the info is valid. We create a new  \n    // object for user, save it to localStorage and take user to app's \n    //landing page. \n    handleSubmit = async(event) => {\n        event.preventDefault();\n        //Initialize user account\n        let userData = {\n            type: this.state.type,\n            displayName: this.state.displayName,\n            password: this.state.password,\n            profilePicURL: this.state.profilePicURL,\n            securityQuestion: this.state.securityQuestion,\n            securityAnswer: this.state.securityAnswer\n        };\n        const url = '/users/' + this.state.accountName;\n        let res;\n        if (this.props.create) { //use POST route to create new user account\n            res = await fetch(url, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                    },\n                method: 'POST',\n                body: JSON.stringify(userData)}); \n            if (res.status == 200) { //successful account creation!\n                this.props.done(\"New account created! Enter credentials to log in.\",false);\n            } else { //Unsuccessful account creation\n                //Grab textual error message\n                const resText = await res.text();\n                this.props.done(resText,false);\n            }\n        } else { //use PUT route to update existing user account\n            res = await fetch(url, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                    },\n                method: 'PUT',\n                body: JSON.stringify(userData)}); \n            if (res.status == 200) { //successful account creation!\n                this.props.done(\"User Account Updated!\",false);\n            } else { //Unsuccessful account update\n                //Grab textual error message\n                const resText = await res.text();\n                this.props.done(resText,false);\n            }\n        }\n    }\n\n    //deleteAccount -- Called after confirms account deletion. \n    //Uses DELETE server route to perform server deletion. \n    //Calls on done with status message and\n    //true if delete was succesful, false otherwise.\n    deleteAccount = async() => {\n       const url = '/users/' + this.state.accountName;\n       const res = await fetch(url, \n                    {method: 'DELETE'}); \n        if (res.status == 200) { //successful account deletion!\n            this.props.done(\"Account '\" + this.state.accountName + \"' has been deleted.\",true);\n        } else { //Unsuccessful account deletion\n            //Grab textual error message\n            const resText = await res.text();\n            this.props.done(resText,false);\n        }\n        this.setState({confirmDelete: false});\n    }\n\n    //confirmDeleteAccount -- Called when user clicks on \"Delete Account...\"\n    //button to indicate intention to delete account. Presents the Confirm\n    //Delete dialog box.\n    confirmDeleteAccount = (e) => {\n        e.preventDefault();\n        this.setState({confirmDelete: true});\n    }\n\n    render() {\n    return (  \n    <div className=\"modal\" role=\"dialog\">\n    <div className=\"modal-dialog modal-lg\"></div>\n        <div className=\"modal-content form-center\">\n            <div className=\"modal-header\">\n              <h3><b>{this.props.create ? \"Create New Account\" : \"Edit Account\"}</b></h3>\n              <button className=\"modal-close\" \n                       onClick={this.props.cancel}>\n                &times;</button>\n            </div>\n            <div className=\"modal-body\">\n            <form onSubmit={this.handleSubmit}>\n            <label>\n                Type:\n                <select name=\"type\" value={this.state.type} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"user\">User</option>\n                    <option value=\"operator\">Operator</option>\n                </select> \n            </label>\n            <br/>\n            <label>\n                Email: \n                <input  \n                autocomplete=\"off\"\n                disabled={!this.props.create}\n                className=\"form-control form-text form-center\"\n                name=\"accountName\"\n                type=\"email\"\n                size=\"35\"\n                placeholder=\"Enter Email Address\"\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                required={true}\n                ref={this.newUserRef}\n                value={this.state.accountName}\n                onChange={this.handleChange}\n                onBlur={this.setDefaultDisplayName}\n                />\n            </label>\n            <br/>\n            <label>\n                Password:\n                <input\n                autocomplete=\"off\"\n                className=\"form-control form-text form-center\"\n                name=\"password\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Enter Password\"\n                pattern=\n                \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                required={true}\n                value={this.state.password}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Repeat Password:\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"passwordRepeat\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Repeat Password\"\n                required={true}\n                ref={this.repeatPassRef}\n                value={this.state.passwordRepeat}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Display Name:\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"displayName\"\n                type=\"text\"\n                size=\"30\"\n                placeholder=\"Display Name\"\n                required={true}\n                value={this.state.displayName}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Profile Picture:<br/>\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"profilePic\"\n                type=\"file\"\n                accept=\"image/x-png,image/gif,image/jpeg\" \n                ref={this.profilePicRef}\n                value={this.state.profilePic}\n                onChange={this.handleChange}\n                />\n                <img src={this.state.profilePicURL != \"\" ? \n                            this.state.profilePicURL :\n                            this.state.profilePicDataURL} \n                        height=\"60\" width=\"60\" \n                 />\n            </label> \n            <br/>\n            <label>\n                Security Question:\n                <textarea\n                className=\"form-control form-text form-center\"\n                name=\"securityQuestion\"\n                size=\"35\"\n                placeholder=\"Security Question\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.securityQuestion}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Answer to Security Question:\n                <textarea\n                className=\"form-control form-text form-center\"\n                name=\"securityAnswer\"\n                type=\"text\"\n                placeholder=\"Answer\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.securityAnswer}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            {!this.props.create ?  \n            <button className=\"btn btn-small btn-danger\" onClick={this.confirmDeleteAccount}>\n                Delete Account...\n            </button> : null}\n            <br/><br/>\n            {!this.props.create ?  \n            <button type=\"button\" className=\"btn btn-small btn-primary\" onClick={this.toggleAddCardClicked} disabled={this.state.card === 1 ? true:false}>\n                Add Card\n            </button> : null}\n            <br/><br/>\n            <button role=\"submit\" \n                disabled={!this.state.formUpdated}\n                className=\"btn btn-primary btn-color-theme modal-submit-btn\">\n                <span className={this.props.create ? \"fa fa-user-plus\" : \"fa fa-user\"}></span>\n                &nbsp;{this.props.create ? \"Create Account\" : \"Update Account\"}\n            </button>\n            </form>\n            </div>\n        </div>\n        {this.state.confirmDelete ? \n          <ConfirmDeleteAccount email={this.state.accountName}\n                                deleteAccount={this.deleteAccount}\n                                close={() => (this.setState({confirmDelete: false}))}\n         /> : null}\n    </div>\n    );\n}\n}\n\nexport default CreateEditAccountDialog;"]},"metadata":{},"sourceType":"module"}