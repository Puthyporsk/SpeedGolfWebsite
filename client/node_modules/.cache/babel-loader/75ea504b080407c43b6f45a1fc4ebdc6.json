{"ast":null,"code":"import _regeneratorRuntime from\"/Users/puthypor/Desktop/ssplay/SpeedGolfWebsite/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/puthypor/Desktop/ssplay/SpeedGolfWebsite/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/puthypor/Desktop/ssplay/SpeedGolfWebsite/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/puthypor/Desktop/ssplay/SpeedGolfWebsite/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/puthypor/Desktop/ssplay/SpeedGolfWebsite/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/puthypor/Desktop/ssplay/SpeedGolfWebsite/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/puthypor/Desktop/ssplay/SpeedGolfWebsite/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import NavBar from'./NavBar.js';import SideMenu from'./SideMenu.js';import ModeBar from'./ModeBar.js';import CreateEditAccountDialog from'./CreateEditAccountDialog.js';import LoginPage from'./LoginPage.js';import AppMode from\"./../AppMode.js\";import FeedPage from'./FeedPage.js';import Rounds from'./Rounds.js';import CoursesPage from'./CoursesPage.js';import AboutBox from'./AboutBox.js';import AddCardDialog from'./AddCardDialog.js';var modeTitle={};modeTitle[AppMode.LOGIN]=\"Welcome to SpeedScore\";modeTitle[AppMode.FEED]=\"Activity Feed\";modeTitle[AppMode.ROUNDS]=\"My Rounds\";modeTitle[AppMode.ROUNDS_LOGROUND]=\"Log New Round\";modeTitle[AppMode.ROUNDS_EDITROUND]=\"Edit Round\";modeTitle[AppMode.COURSES]=\"Search Courses\";modeTitle[AppMode.COURSES_NEARBY]=\"Nearby Courses\";modeTitle[AppMode.COURSES_ALL]=\"All Speedgolf-Friendly Courses\";modeTitle[AppMode.COURSES_ADD]=\"Add a Course\";modeTitle[AppMode.COURSES_APPT]=\"All Appointments\";modeTitle[AppMode.COURSES_MYAPPT]=\"My Appointments\";var modeToPage={};modeToPage[AppMode.LOGIN]=LoginPage;modeToPage[AppMode.FEED]=FeedPage;modeToPage[AppMode.ROUNDS]=Rounds;modeToPage[AppMode.ROUNDS_LOGROUND]=Rounds;modeToPage[AppMode.ROUNDS_EDITROUND]=Rounds;modeToPage[AppMode.COURSES]=CoursesPage;modeToPage[AppMode.COURSES_NEARBY]=CoursesPage;modeToPage[AppMode.COURSES_ALL]=CoursesPage;modeToPage[AppMode.COURSES_ADD]=CoursesPage;modeToPage[AppMode.COURSES_APPT]=CoursesPage;modeToPage[AppMode.COURSES_MYAPPT]=CoursesPage;var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.refreshOnUpdate=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(newMode){var response,obj;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/users/\"+_this.state.userObj.id);case 2:response=_context.sent;_context.next=5;return response.json();case 5:response=_context.sent;obj=JSON.parse(response);_this.setState({userObj:obj,mode:newMode});case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.handleChangeMode=function(newMode){_this.setState({mode:newMode});};_this.openMenu=function(){_this.setState({menuOpen:true});};_this.closeMenu=function(){_this.setState({menuOpen:false});};_this.toggleMenuOpen=function(){_this.setState(function(prevState){return{menuOpen:!prevState.menuOpen};});};_this.setUserId=function(Id){_this.setState({userId:Id,authenticated:true});};_this.showEditAccount=function(){_this.setState({showEditAccountDialog:true});};_this.cancelEditAccount=function(){_this.setState({showEditAccountDialog:false});};_this.setUserObjType=function(newType){_this.setState({userObj:newType});};_this.toggleAddCardClicked=function(){_this.setState(function(state){return{addCardClicked:!state.addCardClicked};});};_this.editAccountDone=function(msg,deleted){if(deleted){_this.setState({showEditAccountDialog:false,statusMsg:msg,mode:AppMode.LOGIN});}else{_this.setState({showEditAccountDialog:false,statusMsg:msg});}};_this.closeStatusMsg=function(){_this.setState({statusMsg:\"\"});};_this.state={mode:AppMode.LOGIN,menuOpen:false,authenticated:false,userObj:{displayName:\"\",profilePicURL:\"\"},editAccount:false,showEditAccountDialog:false,statusMsg:\"\",showAboutDialog:false,addCardClicked:false,cardExist:false};return _this;}//componentDidMount\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(!this.state.authenticated){//Use /auth/test route to (re)-test authentication and obtain user data\nfetch(\"/auth/test\").then(function(response){return response.json();}).then(function(obj){if(obj.isAuthenticated){_this2.setState({userObj:obj.user,authenticated:true,mode:AppMode.COURSES_ALL//We're authenticated so can get into the app.\n});}});}}//refreshOnUpdate(newMode) -- Called by child components when user data changes in \n//the database. The function calls the users/:userid (GET) route to update \n//the userObj state var based on the latest database changes, and sets the \n//mode state var is set to newMode. After this method is called, the\n//App will re-render itself, forcing the new data to \n//propagate to the child components when they are re-rendered.\n},{key:\"render\",value:function render(){var _this3=this;var ModePage=modeToPage[this.state.mode];return React.createElement(\"div\",{className:\"padded-page\"},this.state.showAboutDialog?React.createElement(AboutBox,{close:function close(){return _this3.setState({showAboutDialog:false});}}):null,this.state.statusMsg!=\"\"?React.createElement(\"div\",{className:\"status-msg\"},React.createElement(\"span\",null,this.state.statusMsg),React.createElement(\"button\",{className:\"modal-close\",onClick:this.closeStatusMsg},React.createElement(\"span\",{className:\"fa fa-times\"}))):null,this.state.showEditAccountDialog?React.createElement(CreateEditAccountDialog,{create:false,userId:this.state.userObj.id,done:this.editAccountDone,cancel:this.cancelEditAccount}):null,this.state.addCardClicked?React.createElement(AddCardDialog,{userObj:this.state.userObj,cardExist:this.state.cardExist,setCardDeleted:function setCardDeleted(){return _this3.setState({cardExist:false});},setCardExist:function setCardExist(){return _this3.setState({cardExist:true});},userId:this.state.userObj.id,close:function close(){return _this3.setState({addCardClicked:false});}}):null,React.createElement(NavBar,{aboutOpen:this.state.showAboutDialog,title:modeTitle[this.state.mode],mode:this.state.mode,changeMode:this.handleChangeMode,menuOpen:this.state.menuOpen,toggleMenuOpen:this.toggleMenuOpen}),React.createElement(SideMenu,{toggleAddCardClicked:this.toggleAddCardClicked,type:this.state.userObj.type,changeMode:this.handleChangeMode,menuOpen:this.state.menuOpen,mode:this.state.mode,toggleMenuOpen:this.toggleMenuOpen,displayName:this.state.userObj.displayName,profilePicURL:this.state.userObj.profilePicURL,localAccount:this.state.userObj.authStrategy===\"local\",editAccount:this.showEditAccount,logOut:function logOut(){return _this3.handleChangeMode(AppMode.LOGIN);},showAbout:function showAbout(){_this3.setState({showAboutDialog:true});}}),React.createElement(ModeBar,{aboutOpen:this.state.showAboutDialog,mode:this.state.mode,changeMode:this.handleChangeMode,menuOpen:this.state.menuOpen}),React.createElement(ModePage,{setUserObjType:this.setUserObjType,menuOpen:this.state.menuOpen,mode:this.state.mode,changeMode:this.handleChangeMode,userObj:this.state.userObj,refreshOnUpdate:this.refreshOnUpdate}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/puthypor/Desktop/ssplay/SpeedGolfWebsite/client/src/components/App.js"],"names":["React","NavBar","SideMenu","ModeBar","CreateEditAccountDialog","LoginPage","AppMode","FeedPage","Rounds","CoursesPage","AboutBox","AddCardDialog","modeTitle","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","COURSES_NEARBY","COURSES_ALL","COURSES_ADD","COURSES_APPT","COURSES_MYAPPT","modeToPage","App","refreshOnUpdate","newMode","fetch","state","userObj","id","response","json","obj","JSON","parse","setState","mode","handleChangeMode","openMenu","menuOpen","closeMenu","toggleMenuOpen","prevState","setUserId","Id","userId","authenticated","showEditAccount","showEditAccountDialog","cancelEditAccount","setUserObjType","newType","toggleAddCardClicked","addCardClicked","editAccountDone","msg","deleted","statusMsg","closeStatusMsg","displayName","profilePicURL","editAccount","showAboutDialog","cardExist","then","isAuthenticated","user","ModePage","type","authStrategy","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport ModeBar from './ModeBar.js';\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js'\nimport LoginPage from './LoginPage.js';\nimport AppMode from \"./../AppMode.js\";\nimport FeedPage from './FeedPage.js';\nimport Rounds from './Rounds.js';\nimport CoursesPage from './CoursesPage.js';\nimport AboutBox from './AboutBox.js';\nimport AddCardDialog from './AddCardDialog.js';\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\nmodeTitle[AppMode.COURSES] = \"Search Courses\";\nmodeTitle[AppMode.COURSES_NEARBY] = \"Nearby Courses\";\nmodeTitle[AppMode.COURSES_ALL] = \"All Speedgolf-Friendly Courses\";\nmodeTitle[AppMode.COURSES_ADD] = \"Add a Course\";\nmodeTitle[AppMode.COURSES_APPT] = \"All Appointments\";\nmodeTitle[AppMode.COURSES_MYAPPT] = \"My Appointments\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.FEED] = FeedPage;\nmodeToPage[AppMode.ROUNDS] = Rounds;\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\nmodeToPage[AppMode.COURSES] = CoursesPage;\nmodeToPage[AppMode.COURSES_NEARBY] = CoursesPage;\nmodeToPage[AppMode.COURSES_ALL] = CoursesPage;\nmodeToPage[AppMode.COURSES_ADD] = CoursesPage;\nmodeToPage[AppMode.COURSES_APPT] = CoursesPage;\nmodeToPage[AppMode.COURSES_MYAPPT] = CoursesPage;\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {mode: AppMode.LOGIN,\n                  menuOpen: false,\n                  authenticated: false,\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\n                  editAccount: false,\n                  showEditAccountDialog: false,\n                  statusMsg: \"\",\n                  showAboutDialog: false,\n                  addCardClicked: false,\n                  cardExist: false\n                 };\n  }\n\n  //componentDidMount\n  componentDidMount() {\n    if (!this.state.authenticated) { \n      //Use /auth/test route to (re)-test authentication and obtain user data\n      fetch(\"/auth/test\")\n        .then((response) => response.json())\n        .then((obj) => {\n          if (obj.isAuthenticated) {\n            this.setState({\n              userObj: obj.user,\n              authenticated: true,\n              mode: AppMode.COURSES_ALL //We're authenticated so can get into the app.\n            });\n          }\n        }\n      )\n    } \n  }\n\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \n  //the database. The function calls the users/:userid (GET) route to update \n  //the userObj state var based on the latest database changes, and sets the \n  //mode state var is set to newMode. After this method is called, the\n  //App will re-render itself, forcing the new data to \n  //propagate to the child components when they are re-rendered.\n  refreshOnUpdate = async(newMode) => {\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\n    response = await response.json();\n    const obj = JSON.parse(response);\n    this.setState({\n      userObj: obj,\n      mode: newMode\n    });\n  }\n\n\n  handleChangeMode = (newMode) => {\n    this.setState({mode: newMode});\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  setUserId = (Id) => {\n    this.setState({userId: Id,\n                   authenticated: true});\n  }\n\n  showEditAccount = () => {\n    this.setState({showEditAccountDialog: true});\n\n  }\n\n  cancelEditAccount = () => {\n    this.setState({showEditAccountDialog: false});\n  }\n\n  setUserObjType = (newType) => {\n    this.setState({userObj: newType});\n  }\n\n  toggleAddCardClicked = () => {\n    this.setState(state => ({addCardClicked: !state.addCardClicked}));\n  }\n\n  //editAccountDone -- called after successful edit or\n  //deletion of user account. msg contains the status\n  //message and deleted indicates whether an account was\n  //edited (deleted == false) or deleted (deleted == true)\n  editAccountDone = (msg, deleted) => {\n    if (deleted) {\n      this.setState({showEditAccountDialog: false,\n                     statusMsg: msg,\n                     mode: AppMode.LOGIN});\n      } else {\n        this.setState({showEditAccountDialog: false,\n          statusMsg: msg});\n      }\n  }\n\n  closeStatusMsg = () => {\n    this.setState({statusMsg: \"\"});\n  }\n\n  render() {\n    const ModePage = modeToPage[this.state.mode];\n    return (\n      <div className=\"padded-page\">\n        {this.state.showAboutDialog ? \n          <AboutBox close={() => this.setState({showAboutDialog: false})}/> : null}\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\">\n              <span>{this.state.statusMsg}</span>\n              <button className=\"modal-close\" onClick={this.closeStatusMsg}>\n                  <span className=\"fa fa-times\"></span></button></div> : null}\n        {this.state.showEditAccountDialog ? \n            <CreateEditAccountDialog \n              create={false} \n              userId={this.state.userObj.id} \n              done={this.editAccountDone} \n              cancel={this.cancelEditAccount}/> : null}\n        {this.state.addCardClicked ? \n          <AddCardDialog \n              userObj={this.state.userObj}  \n              cardExist={this.state.cardExist}\n              setCardDeleted={() => (this.setState({cardExist: false}))}\n              setCardExist={() => (this.setState({cardExist: true}))}\n              userId={this.state.userObj.id}\n              close={() => (this.setState({addCardClicked: false}))} /> : null}\n        <NavBar \n          aboutOpen={this.state.showAboutDialog}\n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}/>\n          <SideMenu \n            toggleAddCardClicked={this.toggleAddCardClicked}\n            type={this.state.userObj.type}\n            changeMode={this.handleChangeMode}\n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            displayName={this.state.userObj.displayName}\n            profilePicURL={this.state.userObj.profilePicURL}\n            localAccount={this.state.userObj.authStrategy === \"local\"}\n            editAccount={this.showEditAccount}\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\n            showAbout={() => {this.setState({showAboutDialog: true})}}/>\n          <ModeBar \n            aboutOpen={this.state.showAboutDialog}\n            mode={this.state.mode} \n            changeMode={this.handleChangeMode}\n            menuOpen={this.state.menuOpen}/>\n          <ModePage \n            setUserObjType={this.setUserObjType}\n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            changeMode={this.handleChangeMode}\n            userObj={this.state.userObj}\n            refreshOnUpdate={this.refreshOnUpdate}/>\n      </div>\n    );  \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}