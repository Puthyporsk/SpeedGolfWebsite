{"ast":null,"code":"import _classCallCheck from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import ReactDOM from'react-dom';var mapStyles={map:{position:'absolute',width:'100%',height:'100%'}};var pos;var map;var bounds;var infoWindow;var currentInfoWindow;var service;var infoPane;export var CurrentLocation=/*#__PURE__*/function(_React$Component){_inherits(CurrentLocation,_React$Component);function CurrentLocation(props){var _this;_classCallCheck(this,CurrentLocation);_this=_possibleConstructorReturn(this,_getPrototypeOf(CurrentLocation).call(this,props));_this.getNearbyPlaces=function(position){var google=_this.props.google;var maps=google.maps;var request={location:position,rankBy:maps.places.RankBy.DISTANCE,keyword:'golf'};service=new maps.places.PlacesService(_this.map);service.nearbySearch(request,_this.nearbyCallback);};_this.nearbyCallback=function(results,status){var google=_this.props.google;var maps=google.maps;if(status==maps.places.PlacesServiceStatus.OK){_this.createMarkers(results);}};_this.createMarkers=function(places){var google=_this.props.google;var maps=google.maps;places.forEach(function(place){var marker=new maps.Marker({position:place.geometry.location,map:_this.map,title:place.name});/* TODO: Step 4B: Add click listeners to the markers */ // Add click listener to each marker\nmaps.event.addListener(marker,'click',function(){var request={placeId:place.place_id,fields:['name','formatted_address','geometry','rating','website','photos']};/* Only fetch the details of a place when the user clicks on a marker.\n           * If we fetch the details for all place results as soon as we get\n           * the search response, we will hit API rate limits. */service.getDetails(request,function(placeResult,status){_this.showDetails(placeResult,marker,status);});});// Adjust the map bounds to include the location of this marker\nbounds.extend(place.geometry.location);});/* Once all the markers have been placed, adjust the bounds of the map to\n       * show all the markers within the visible area. */_this.map.fitBounds(bounds);};_this.showDetails=function(placeResult,marker,status){var google=_this.props.google;var maps=google.maps;if(status==maps.places.PlacesServiceStatus.OK){var placeInfowindow=new maps.InfoWindow();var rating=\"None\";if(placeResult.rating)rating=placeResult.rating;placeInfowindow.setContent('<div><strong>'+placeResult.name+'</strong><br>'+'Rating: '+rating+'</div>');placeInfowindow.open(marker.map,marker);currentInfoWindow.close();currentInfoWindow=placeInfowindow;_this.showPanel(placeResult);}else{console.log('showDetails failed: '+status);}};_this.showPanel=function(placeResult){// If infoPane is already open, close it\nif(infoPane.classList.contains(\"open\")){infoPane.classList.remove(\"open\");}// Clear the previous details\nwhile(infoPane.lastChild){infoPane.removeChild(infoPane.lastChild);}/* TODO: Step 4E: Display a Place Photo with the Place Details */ // Add the primary photo, if there is one\nif(placeResult.photos){var firstPhoto=placeResult.photos[0];var photo=document.createElement('img');photo.classList.add('hero');photo.src=firstPhoto.getUrl();infoPane.appendChild(photo);}// Add place details with text formatting\nvar name=document.createElement('h1');name.classList.add('place');name.textContent=placeResult.name;infoPane.appendChild(name);if(placeResult.rating){var rating=document.createElement('p');rating.classList.add('details');rating.textContent=\"Rating: \".concat(placeResult.rating,\" \\u272E\");infoPane.appendChild(rating);}var address=document.createElement('p');address.classList.add('details');address.textContent=placeResult.formatted_address;infoPane.appendChild(address);if(placeResult.website){var websitePara=document.createElement('p');var websiteLink=document.createElement('a');var websiteUrl=document.createTextNode(placeResult.website);websiteLink.appendChild(websiteUrl);websiteLink.title=placeResult.website;websiteLink.href=placeResult.website;websitePara.appendChild(websiteLink);infoPane.appendChild(websitePara);}// Open the infoPane\ninfoPane.classList.add(\"open\");};var _this$props$initialCe=_this.props.initialCenter,lat=_this$props$initialCe.lat,lng=_this$props$initialCe.lng;_this.state={currentLocation:{lat:lat,lng:lng}};return _this;}_createClass(CurrentLocation,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(prevProps.google!==this.props.google){this.loadMap();}if(prevState.currentLocation!==this.state.currentLocation){this.recenterMap();}}},{key:\"recenterMap\",value:function recenterMap(){var map=this.map;var current=this.state.currentLocation;var google=this.props.google;var maps=google.maps;if(map){var center=new maps.LatLng(current.lat,current.lng);map.panTo(center);}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var google=this.props.google;var maps=google.maps;bounds=new maps.LatLngBounds();infoWindow=new maps.InfoWindow();currentInfoWindow=infoWindow;infoPane=document.getElementById('panel');if(this.props.centerAroundCurrentLocation){if(navigator&&navigator.geolocation){navigator.geolocation.getCurrentPosition(function(pos){var coords=pos.coords;_this2.setState({currentLocation:{lat:coords.latitude,lng:coords.longitude}});bounds.extend(_this2.state.currentLocation);infoWindow.setPosition(_this2.state.currentLocation);infoWindow.setContent('Location found.');infoWindow.open(_this2.map);_this2.map.setCenter(_this2.state.currentLocation);});}}this.loadMap();this.getNearbyPlaces(this.state.currentLocation);}},{key:\"loadMap\",value:function loadMap(){if(this.props&&this.props.google){// checks if google is available\nvar google=this.props.google;var maps=google.maps;var mapRef=this.refs.map;// reference to the actual DOM element\nvar node=ReactDOM.findDOMNode(mapRef);var zoom=this.props.zoom;var _this$state$currentLo=this.state.currentLocation,lat=_this$state$currentLo.lat,lng=_this$state$currentLo.lng;var center=new maps.LatLng(lat,lng);var mapConfig=Object.assign({},{center:center,zoom:zoom});// maps.Map() is constructor that instantiates the map\nthis.map=new maps.Map(node,mapConfig);}}},{key:\"renderChildren\",value:function renderChildren(){var _this3=this;var children=this.props.children;if(!children)return;return React.Children.map(children,function(c){if(!c)return;return React.cloneElement(c,{map:_this3.map,google:_this3.props.google,mapCenter:_this3.state.currentLocation});});}},{key:\"render\",value:function render(){var style=Object.assign({},mapStyles.map);return React.createElement(\"div\",{id:\"Map\"},React.createElement(\"div\",{style:style,ref:\"map\"},\"Loading map...\"),React.createElement(\"div\",{id:\"panel\"}),React.createElement(\"div\",{id:\"map\"}),this.renderChildren());}}]);return CurrentLocation;}(React.Component);CurrentLocation.defaultProps={zoom:14,initialCenter:{lat:46.7482916,lng:-117.153158},centerAroundCurrentLocation:false,visible:true};export default CurrentLocation;","map":{"version":3,"sources":["/Users/puthypor/Desktop/ssplay/bp-ssplay/client/src/components/Map.js"],"names":["React","ReactDOM","mapStyles","map","position","width","height","pos","bounds","infoWindow","currentInfoWindow","service","infoPane","CurrentLocation","props","getNearbyPlaces","google","maps","request","location","rankBy","places","RankBy","DISTANCE","keyword","PlacesService","nearbySearch","nearbyCallback","results","status","PlacesServiceStatus","OK","createMarkers","forEach","place","marker","Marker","geometry","title","name","event","addListener","placeId","place_id","fields","getDetails","placeResult","showDetails","extend","fitBounds","placeInfowindow","InfoWindow","rating","setContent","open","close","showPanel","console","log","classList","contains","remove","lastChild","removeChild","photos","firstPhoto","photo","document","createElement","add","src","getUrl","appendChild","textContent","address","formatted_address","website","websitePara","websiteLink","websiteUrl","createTextNode","href","initialCenter","lat","lng","state","currentLocation","prevProps","prevState","loadMap","recenterMap","current","center","LatLng","panTo","LatLngBounds","getElementById","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","coords","setState","latitude","longitude","setPosition","setCenter","mapRef","refs","node","findDOMNode","zoom","mapConfig","Object","assign","Map","children","Children","c","cloneElement","mapCenter","style","renderChildren","Component","defaultProps","visible"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  }\n};\n\nlet pos;\nlet map;\nlet bounds;\nlet infoWindow;\nlet currentInfoWindow;\nlet service;\nlet infoPane;\n\nexport class CurrentLocation extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        const { lat, lng } = this.props.initialCenter;\n    \n        this.state = {\n          currentLocation: {\n            lat: lat,\n            lng: lng\n          }\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.google !== this.props.google) {\n          this.loadMap();\n        }\n        if (prevState.currentLocation !== this.state.currentLocation) {\n          this.recenterMap();\n        }\n    }\n\n    recenterMap() {\n        const map = this.map;\n        const current = this.state.currentLocation;\n        const google = this.props.google;\n        const maps = google.maps;\n    \n        if (map) {\n          let center = new maps.LatLng(current.lat, current.lng);\n          map.panTo(center);\n        }\n    }\n\n    componentDidMount() {\n      const { google } = this.props;\n      const maps = google.maps;\n      bounds = new maps.LatLngBounds();\n      infoWindow = new maps.InfoWindow;\n      currentInfoWindow = infoWindow;\n      infoPane = document.getElementById('panel');\n\n        if (this.props.centerAroundCurrentLocation) {\n          if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(pos => {\n              const coords = pos.coords;\n              this.setState({\n                currentLocation: {\n                  lat: coords.latitude,\n                  lng: coords.longitude\n                }\n              });\n              bounds.extend(this.state.currentLocation);\n              infoWindow.setPosition(this.state.currentLocation);\n              infoWindow.setContent('Location found.');\n              infoWindow.open(this.map);\n              this.map.setCenter(this.state.currentLocation);\n            });\n          }\n        }\n        this.loadMap();\n        this.getNearbyPlaces(this.state.currentLocation);\n    }\n\n    loadMap() {\n        if (this.props && this.props.google) {\n          // checks if google is available\n          const { google } = this.props;\n          const maps = google.maps;\n    \n          const mapRef = this.refs.map;\n    \n          // reference to the actual DOM element\n          const node = ReactDOM.findDOMNode(mapRef);\n    \n          let { zoom } = this.props;\n          const { lat, lng } = this.state.currentLocation;\n          const center = new maps.LatLng(lat, lng);\n    \n          const mapConfig = Object.assign(\n            {},\n            {\n              center: center,\n              zoom: zoom\n            }\n          );\n    \n          // maps.Map() is constructor that instantiates the map\n          this.map = new maps.Map(node, mapConfig);\n        }\n    }\n\n  getNearbyPlaces = (position) => {\n    const { google } = this.props;\n    const maps = google.maps;\n    let request = {\n      location: position,\n      rankBy: maps.places.RankBy.DISTANCE,\n      keyword: 'golf'\n    };\n\n    service = new maps.places.PlacesService(this.map);\n    service.nearbySearch(request, this.nearbyCallback);\n  }\n\n    // Handle the results (up to 20) of the Nearby Search\n    nearbyCallback = (results, status) => {\n      const { google } = this.props;\n      const maps = google.maps;\n      if (status == maps.places.PlacesServiceStatus.OK) {\n        this.createMarkers(results);\n      }\n    }\n\n    createMarkers = (places) => {\n      const { google } = this.props;\n      const maps = google.maps;\n      places.forEach(place => {\n        let marker = new maps.Marker({\n          position: place.geometry.location,\n          map: this.map,\n          title: place.name\n        });\n  \n        /* TODO: Step 4B: Add click listeners to the markers */\n        // Add click listener to each marker\n        maps.event.addListener(marker, 'click', () => {\n          let request = {\n            placeId: place.place_id,\n            fields: ['name', 'formatted_address', 'geometry', 'rating',\n              'website', 'photos']\n          };\n  \n          /* Only fetch the details of a place when the user clicks on a marker.\n           * If we fetch the details for all place results as soon as we get\n           * the search response, we will hit API rate limits. */\n          service.getDetails(request, (placeResult, status) => {\n            this.showDetails(placeResult, marker, status)\n          });\n        });\n  \n        // Adjust the map bounds to include the location of this marker\n        bounds.extend(place.geometry.location);\n      });\n      /* Once all the markers have been placed, adjust the bounds of the map to\n       * show all the markers within the visible area. */\n      this.map.fitBounds(bounds);\n    }\n\n    showDetails = (placeResult, marker, status) => {\n      const { google } = this.props;\n      const maps = google.maps;\n      if (status == maps.places.PlacesServiceStatus.OK) {\n        let placeInfowindow = new maps.InfoWindow();\n        let rating = \"None\";\n        if (placeResult.rating) rating = placeResult.rating;\n        placeInfowindow.setContent('<div><strong>' + placeResult.name +\n          '</strong><br>' + 'Rating: ' + rating + '</div>');\n        placeInfowindow.open(marker.map, marker);\n        currentInfoWindow.close();\n        currentInfoWindow = placeInfowindow;\n        this.showPanel(placeResult);\n      } else {\n        console.log('showDetails failed: ' + status);\n      }\n    }\n\n    showPanel = (placeResult) => {\n      // If infoPane is already open, close it\n      if (infoPane.classList.contains(\"open\")) {\n        infoPane.classList.remove(\"open\");\n      }\n  \n      // Clear the previous details\n      while (infoPane.lastChild) {\n        infoPane.removeChild(infoPane.lastChild);\n      }\n  \n      /* TODO: Step 4E: Display a Place Photo with the Place Details */\n      // Add the primary photo, if there is one\n      if (placeResult.photos) {\n        let firstPhoto = placeResult.photos[0];\n        let photo = document.createElement('img');\n        photo.classList.add('hero');\n        photo.src = firstPhoto.getUrl();\n        infoPane.appendChild(photo);\n      }\n  \n      // Add place details with text formatting\n      let name = document.createElement('h1');\n      name.classList.add('place');\n      name.textContent = placeResult.name;\n      infoPane.appendChild(name);\n      if (placeResult.rating) {\n        let rating = document.createElement('p');\n        rating.classList.add('details');\n        rating.textContent = `Rating: ${placeResult.rating} \\u272e`;\n        infoPane.appendChild(rating);\n      }\n      let address = document.createElement('p');\n      address.classList.add('details');\n      address.textContent = placeResult.formatted_address;\n      infoPane.appendChild(address);\n      if (placeResult.website) {\n        let websitePara = document.createElement('p');\n        let websiteLink = document.createElement('a');\n        let websiteUrl = document.createTextNode(placeResult.website);\n        websiteLink.appendChild(websiteUrl);\n        websiteLink.title = placeResult.website;\n        websiteLink.href = placeResult.website;\n        websitePara.appendChild(websiteLink);\n        infoPane.appendChild(websitePara);\n      }\n  \n      // Open the infoPane\n      infoPane.classList.add(\"open\");\n    }\n\n    renderChildren() {\n        const { children } = this.props;\n    \n        if (!children) return;\n    \n        return React.Children.map(children, c => {\n          if (!c) return;\n    \n          return React.cloneElement(c, {\n            map: this.map,\n            google: this.props.google,\n            mapCenter: this.state.currentLocation\n          });\n        });\n    }\n\n    render() {\n        const style = Object.assign({}, mapStyles.map);\n    \n        return (\n          <div id=\"Map\">\n            <div style={style} ref=\"map\">\n              Loading map...\n            </div>\n            {/* <!-- The slide-out panel for showing place details --> */}\n            <div id=\"panel\"></div>\n            {/* <!-- Map appears here --> */}\n            <div id=\"map\"></div>\n\n            {this.renderChildren()}\n          </div>\n        );\n    }\n}\n\n\nCurrentLocation.defaultProps = {\n    zoom: 14,\n    initialCenter: {\n      lat: 46.7482916,\n      lng: -117.153158\n    },\n    centerAroundCurrentLocation: false,\n    visible: true\n  };\n\nexport default CurrentLocation;"]},"metadata":{},"sourceType":"module"}