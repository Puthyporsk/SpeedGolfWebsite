{"ast":null,"code":"import _defineProperty from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/puthypor/Desktop/ssplay/bp-ssplay/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import AppMode from'../AppMode.js';var LookUpAccountDialog=/*#__PURE__*/function(_React$Component){_inherits(LookUpAccountDialog,_React$Component);function LookUpAccountDialog(){var _this;_classCallCheck(this,LookUpAccountDialog);_this=_possibleConstructorReturn(this,_getPrototypeOf(LookUpAccountDialog).call(this));_this.handleLookUpAccount=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var response,json,obj;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.next=3;return fetch(\"/users/\"+_this.emailRef.current.value);case 3:response=_context.sent;if(!(response.status==200)){_context.next=12;break;}_context.next=7;return response.json();case 7:json=_context.sent;obj=JSON.parse(json);if(obj.authStrategy===\"local\"){_this.props.getSecurityAnswer(obj.id,obj.securityQuestion,obj.securityAnswer);}else{//Account exists but was created through OAuth so password can't be reset \n_this.setState({ErrMsg:\"That account is authenticated through \"+obj.authStrategy+\". \"+\"Please log in to \"+obj.authStrategy+\" to reset the password.\"});}_context.next=13;break;case 12:_this.setState({errorMsg:\"Sorry, there is no account associated with '\"+_this.emailRef.current.value+\"'.\"});case 13:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.emailRef=React.createRef();_this.state={errorMsg:\"\"};return _this;}//handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\n//button, we check whether the account exists. If it does, we update the state,\n//setting the resetEmail var to the email entered, hiding the current dialog box\n//and showing the security question dialog box.\n_createClass(LookUpAccountDialog,[{key:\"render\",value:function render(){var _this2=this,_React$createElement;return React.createElement(\"div\",{className:\"modal\",role:\"dialog\"},React.createElement(\"div\",{className:\"modal-dialog modal-lg\"},React.createElement(\"div\",{className:\"modal-content\"},React.createElement(\"div\",{className:\"modal-header\"},React.createElement(\"h3\",{className:\"modal-title\"},React.createElement(\"b\",null,\"Look Up Account\")),React.createElement(\"button\",{className:\"modal-close\",onClick:function onClick(){_this2.props.cancelResetPassword();}},\"\\xD7\")),React.createElement(\"div\",{className:\"modal-body\"},this.state.errMsg!=\"\"?React.createElement(\"p\",{className:\"emphasis\"},this.state.errorMsg):null,React.createElement(\"form\",{onSubmit:this.handleLookUpAccount},React.createElement(\"label\",null,\"Account Email Address:\",React.createElement(\"input\",(_React$createElement={ref:this.emailRef,className:\"form-control form-text\",type:\"email\",size:\"35\",placeholder:\"Enter Email Address\",pattern:\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}\"},_defineProperty(_React$createElement,\"ref\",this.emailRef),_defineProperty(_React$createElement,\"required\",true),_React$createElement))),React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary btn-color-theme form-submit-btn\"},React.createElement(\"span\",{className:\"fa fa-search\"}),\"\\xA0Look Up Account\"))))));}}]);return LookUpAccountDialog;}(React.Component);export default LookUpAccountDialog;","map":{"version":3,"sources":["/Users/puthypor/Desktop/ssplay/bp-ssplay/client/src/components/LookUpAccountDialog.js"],"names":["React","AppMode","LookUpAccountDialog","handleLookUpAccount","event","preventDefault","fetch","emailRef","current","value","response","status","json","obj","JSON","parse","authStrategy","props","getSecurityAnswer","id","securityQuestion","securityAnswer","setState","ErrMsg","errorMsg","createRef","state","cancelResetPassword","errMsg","Component"],"mappings":"6hCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,C,GAEMC,CAAAA,mB,yFAEF,8BAAc,qDACV,uFADU,MAUdC,mBAVc,0FAUQ,iBAAMC,KAAN,wIAClBA,KAAK,CAACC,cAAN,GADkB,sBAEGC,CAAAA,KAAK,CAAC,UAAY,MAAKC,QAAL,CAAcC,OAAd,CAAsBC,KAAnC,CAFR,QAEdC,QAFc,oBAGdA,QAAQ,CAACC,MAAT,EAAmB,GAHL,iDAIKD,CAAAA,QAAQ,CAACE,IAAT,EAJL,QAIRA,IAJQ,eAKRC,GALQ,CAKFC,IAAI,CAACC,KAAL,CAAWH,IAAX,CALE,CAMd,GAAIC,GAAG,CAACG,YAAJ,GAAqB,OAAzB,CAAkC,CAC9B,MAAKC,KAAL,CAAWC,iBAAX,CAA6BL,GAAG,CAACM,EAAjC,CAAoCN,GAAG,CAACO,gBAAxC,CAA0DP,GAAG,CAACQ,cAA9D,EACH,CAFD,IAEO,CAAE;AACL,MAAKC,QAAL,CAAc,CAACC,MAAM,CAAE,yCAA2CV,GAAG,CAACG,YAA/C,CAA8D,IAA9D,CACR,mBADQ,CACcH,GAAG,CAACG,YADlB,CACiC,yBAD1C,CAAd,EAEH,CAXa,+BAad,MAAKM,QAAL,CAAc,CAACE,QAAQ,CAAE,+CAAiD,MAAKjB,QAAL,CAAcC,OAAd,CAAsBC,KAAvE,CAA+E,IAA1F,CAAd,EAbc,uDAVR,+DAEV,MAAKF,QAAL,CAAgBP,KAAK,CAACyB,SAAN,EAAhB,CACA,MAAKC,KAAL,CAAa,CAACF,QAAQ,CAAE,EAAX,CAAb,CAHU,aAIb,CAED;AACA;AACA;AACA;uEAkBS,sCACL,MACI,4BAAK,SAAS,CAAC,OAAf,CAAuB,IAAI,CAAC,QAA5B,EACE,2BAAK,SAAS,CAAC,uBAAf,EACE,2BAAK,SAAS,CAAC,eAAf,EACE,2BAAK,SAAS,CAAC,cAAf,EACE,0BAAI,SAAS,CAAC,aAAd,EAA4B,+CAA5B,CADF,CAEE,8BAAQ,SAAS,CAAC,aAAlB,CACI,OAAO,CAAE,kBAAM,CAAC,MAAI,CAACP,KAAL,CAAWU,mBAAX,GAAiC,CADrD,SAFF,CADF,CAQE,2BAAK,SAAS,CAAC,YAAf,EACG,KAAKD,KAAL,CAAWE,MAAX,EAAqB,EAArB,CAA0B,yBAAG,SAAS,CAAC,UAAb,EAAyB,KAAKF,KAAL,CAAWF,QAApC,CAA1B,CAA8E,IADjF,CAEE,4BAAM,QAAQ,CAAE,KAAKrB,mBAArB,EACA,0DAEI,mDACA,GAAG,CAAE,KAAKI,QADV,CAEA,SAAS,CAAC,wBAFV,CAGA,IAAI,CAAC,OAHL,CAIA,IAAI,CAAC,IAJL,CAKA,WAAW,CAAC,qBALZ,CAMA,OAAO,CAAC,iDANR,6CAOK,KAAKA,QAPV,kDAQU,IARV,wBAFJ,CADA,CAcA,8BAAQ,IAAI,CAAC,QAAb,CACI,SAAS,CAAC,iDADd,EAEI,4BAAM,SAAS,CAAC,cAAhB,EAFJ,uBAdA,CAFF,CARF,CADF,CADF,CADJ,CAqCH,C,iCAnE6BP,KAAK,CAAC6B,S,EAuExC,cAAe3B,CAAAA,mBAAf","sourcesContent":["import React from 'react';\nimport AppMode from '../AppMode.js';\n\nclass LookUpAccountDialog extends React.Component {\n\n    constructor() {\n        super();\n        this.emailRef = React.createRef();\n        this.state = {errorMsg: \"\"};\n    }\n\n    //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\n    //button, we check whether the account exists. If it does, we update the state,\n    //setting the resetEmail var to the email entered, hiding the current dialog box\n    //and showing the security question dialog box.\n    handleLookUpAccount = async(event) => {\n        event.preventDefault();\n        let response = await fetch(\"/users/\" + this.emailRef.current.value);\n        if (response.status == 200) {\n            const json = await response.json();\n            const obj = JSON.parse(json);\n            if (obj.authStrategy === \"local\") {\n                this.props.getSecurityAnswer(obj.id,obj.securityQuestion, obj.securityAnswer);\n            } else { //Account exists but was created through OAuth so password can't be reset \n                this.setState({ErrMsg: \"That account is authenticated through \" + obj.authStrategy + \". \" +\n                               \"Please log in to \" + obj.authStrategy + \" to reset the password.\"});\n            }\n        } else {\n            this.setState({errorMsg: \"Sorry, there is no account associated with '\" + this.emailRef.current.value + \"'.\"});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"modal\" role=\"dialog\">\n              <div className=\"modal-dialog modal-lg\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h3 className=\"modal-title\"><b>Look Up Account</b></h3>\n                    <button className=\"modal-close\" \n                        onClick={() => {this.props.cancelResetPassword()}}>\n                        &times;\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    {this.state.errMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null}\n                    <form onSubmit={this.handleLookUpAccount}>\n                    <label>\n                        Account Email Address: \n                        <input\n                        ref={this.emailRef}\n                        className=\"form-control form-text\"\n                        type=\"email\"\n                        size=\"35\"\n                        placeholder=\"Enter Email Address\"\n                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                        ref={this.emailRef}\n                        required={true}\n                        />\n                    </label>\n                    <button type=\"submit\" \n                        className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                        <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\n                    </button>\n                    </form>\n                </div>\n              </div>\n            </div>\n          </div>  \n        );   \n    }\n\n}\n\nexport default LookUpAccountDialog;\n"]},"metadata":{},"sourceType":"module"}